MIRACL SEGMENTATION WIKI
________________________


1) Segment CLARITY 3D
___________________________________________

miracl_seg_clarity_neurons_wrapper.sh

	Usage: miracl_seg_clarity_neurons_wrapper.sh

	A GUI will open to choose your input clarity folder (with .tif files)

	The folder should contain data from one channel

		----------

	For command-line / scripting

	Usage: miracl_seg_clarity_neurons_wrapper.sh -d <clarity dir> -t <channel type: sparse or nuclear>

	Example: miracl_seg_clarity_neurons_wrapper.sh -d my_clarity_tifs -t sparse

		arguments (required):

			d. Input clarity directory (including .tif images of one channel)

		Optional arguments:

			t. Channel type: sparse (like Thy1 YFP) [default] or nuclear (like PI)


        ----------

    Main Outputs


        segmentation/seg.tif (.mhd) or seg_nuclear.tif (.mhd)  : segmentation image with all labels (cells)

        segmentation/seg_bin.tif (.mhd) or seg_bin_nuclear.tif (.mhd) : binarized segmentation image


        Results can be openned in Fiji for visualization


		----------

	Dependencies:

		- Fiji

		- Fiji Plugins:

		1) 3D Segmentation plugins (3D ImageJ suite)
		http://imagejdocu.tudor.lu/doku.php?id=plugin:stacks:3d_ij_suite:start

		2) Mathematical Morphology plugins
		http://imagej.net/MorphoLibJ


	________________________________________________
	________________________________________________



2) Voxelize segmentation results
_________________________


    Usage: mouse_seg_voxelize_parallel.py -s [segmentation tif]

        Voxelizes segmentation results into density maps with Allen atlas resolution

        example: mouse_seg_voxelize_parallel.py -s seg.tif

            arguments (required):

            s. Segmentation tif file

    -----

    Main Outputs

        voxelized_seg.(tif/nii)
        voxelized_seg_bin.(tif/nii)

    -----

	Dependencies:

	    Python 2.7
	    used modules:
	        argparse, numpy, scipy, logging, cv2, nibabel, tifffile, joblib, multiprocessing, os, sys, datetime


	________________________________________________
	________________________________________________



3) Compute segmenation features
_________________________


    Usage: mouse_feat_extract.py -s [segmentation tif] -l [Labels]

        Computes features of segmented image and summarizes them per label

        example: mouse_feat_extract.py -s segmentation/voxelized_seg.tif -l reg_final/annotation_hemi_combined_25um_clar_vox.tif

            arguments (required):

            s. Voxelized segmentation tif file

            l. Allen labels (registered to clarity) used to summarize features

                    reg_final/annotation_hemi_(hemi)_(vox)um_clar_vox.tif


    ------

    Main Outputs

        clarity_segmentation_features_ara_labels.csv  (segmentation features summarized per ARA lables)

    ------

    Dependencies:

        Python 2.7
        used modules:
            argparse, numpy, scipy, skimage, pandas, tifffile, joblib, multiprocessing, os, sys, datetime

	________________________________________________
	________________________________________________



