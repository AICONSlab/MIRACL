from miracl_datamodel import MiraclObj, ArgumentType, ArgumentAction


class SegAceObjs:
    out_dir = MiraclObj(
        id="40e90259-ab81-49e0-8eba-c21eb57587f5",
        name="sa_out_dir",
        tags=["ace", "seg", "ace_flow"],
        cli_s_flag="sao",
        cli_l_flag="sa_output_folder",
        cli_obj_type=ArgumentType.STRING,
        cli_help="path to output file folder",
        gui_label=["path to output file folder"],
        gui_group={"ace_flow": "main"},
        gui_order=[4.1, 4.2],
        cli_nargs=2,
        module="ace",
        module_group="seg",
        version_added="2.4.0",
    )

    model_type = MiraclObj(
        id="18183868-cd27-417f-b76c-ae8455494f1c",
        name="sa_model_type",
        tags=["ace", "seg", "ace_flow"],
        cli_s_flag="sam",
        cli_l_flag="sa_model_type",
        cli_choices=["unet", "unetr", "ensemble"],
        cli_obj_type=ArgumentType.STRING,
        cli_help="model architecture",
        gui_label=["Model architecture"],
        gui_group={"ace_flow": "main"},
        gui_order=[5],
        module="ace",
        module_group="seg",
        version_added="2.4.0",
    )

    resolution = MiraclObj(
        id="ede3f8e1-1a1c-4f8c-93a0-46c7f4f5028c",
        name="sa_resolution",
        tags=["ace", "seg", "ace_flow"],
        cli_s_flag="sar",
        cli_l_flag="sa_resolution",
        cli_obj_type=ArgumentType.FLOAT,
        cli_help="voxel size (type: %(type)s)",
        cli_metavar=("X-res", "Y-res", "Z-res"),
        gui_label=["X-res", "Y-res", "Z-res"],
        gui_group={"ace_flow": "main"},
        gui_order=[6.1, 6.2, 6.3],
        cli_nargs=3,
        module="ace",
        module_group="seg",
        version_added="2.4.0",
    )

    gpu_index = MiraclObj(
        id="04cc0683-6a7a-43e1-8367-cc224553b793",
        name="sa_gpu_index",
        tags=["ace", "seg", "ace_flow"],
        cli_s_flag="sag",
        cli_l_flag="sa_gpu_index",
        cli_obj_type=ArgumentType.INTEGER,
        cli_help="index of the GPU to use (type: %(type)s; default: %(default)s)",
        default=0,
        cli_required=False,
        gui_label=["GPU index"],
        gui_group={"ace_flow": "main"},
        gui_order=[7],
        module="ace",
        module_group="seg",
        version_added="2.4.0",
    )

    image_size = MiraclObj(
        id="7555410b-aa43-41ed-bb1d-e35c971d733f",
        name="sa_image_size",
        cli_s_flag="sas",
        cli_l_flag="sa_image_size",
        tags=["ace", "seg", "ace_flow"],
        cli_obj_type=ArgumentType.STRING,
        cli_help="image size (type: int; default: fetched from image header)",
        cli_required=False,
        cli_metavar=("height", "width", "depth"),
        gui_group={"ace_flow": "segmentation"},
        gui_label=["Path to atlas dir"],
        module="ace",
        module_group="seg",
        version_added="2.4.0",
        cli_nargs=3,
    )

    nr_workers = MiraclObj(
        id="56492d95-7c57-4b4f-bcf4-5a5cd4a4eae1",
        name="sa_nr_workers",
        cli_s_flag="saw",
        cli_l_flag="sa_nr_workers",
        tags=["ace", "seg", "ace_flow"],
        cli_obj_type=ArgumentType.INTEGER,
        cli_required=False,
        cli_help="number of cpu cores deployed to pre-process image patches in parallel (type: %(type)s; default: %(default)s)",
        gui_group={"ace_flow": "segmentation"},
        gui_label=["# parallel CPU cores pre-processing"],
        module="ace",
        module_group="seg",
        version_added="2.4.0",
        range_formatting_vals={
            "min_val": 0,
            "max_val": 1000,
            "increment_val": 1,
            "nr_decimals": 5,
        },
        default=4,
    )

    cache_rate = MiraclObj(
        id="ab6fddae-0bec-446f-809f-c343746f9ac6",
        name="sa_cache_rate",
        cli_s_flag="sac",
        cli_l_flag="sa_cache_rate",
        tags=["ace", "seg", "ace_flow"],
        cli_obj_type=ArgumentType.FLOAT,
        cli_required=False,
        cli_help="percentage of raw data that is loaded into cpu during segmentation (type: %(type)s; default: %(default)s)",
        gui_group={"ace_flow": "segmentation"},
        gui_label=["% raw data loaded into CPU"],
        version_added="2.4.0",
        module="ace",
        module_group="seg",
        range_formatting_vals={
            "min_val": 0.0,
            "max_val": 100.0,
            "increment_val": 1,
            "nr_decimals": 1,
        },
        default=0.0,
    )

    batch_size = MiraclObj(
        id="d1721e62-4db7-488b-8783-1135aeb2a603",
        name="sa_batch_size",
        cli_s_flag="sab",
        cli_l_flag="sa_batch_size",
        tags=["ace", "seg", "ace_flow"],
        cli_obj_type=ArgumentType.INTEGER,
        cli_required=False,
        cli_help="number of image patches being processed by the model in parallel on gpu (type: %(type)s; default: %(default)s)",
        gui_group={"ace_flow": "segmentation"},
        gui_label=["Batch size"],
        version_added="2.4.0",
        module="ace",
        module_group="seg",
        default=4,
    )

    monte_carlo = MiraclObj(
        id="a1a89191-3e2d-42e0-a4c9-5d09faaafd3b",
        name="sa_monte_carlo",
        cli_s_flag="samc",
        cli_l_flag="sa_monte_carlo",
        tags=["ace", "seg", "ace_flow"],
        cli_obj_type=ArgumentType.INTEGER,
        default=0,
        cli_help="use Monte Carlo dropout (default: %(default)s)",
        gui_group={"ace_flow": "segmentation"},
        gui_label=["Use Monte Carlo dropout"],
        module="ace",
        module_group="seg",
        version_added="2.4.0",
    )

    visualize_results = MiraclObj(
        id="ab24debf-f832-4234-86e1-e2c4815cd4e3",
        name="sa_visualize_results",
        tags=["ace", "seg", "ace_flow"],
        cli_s_flag="sav",
        cli_l_flag="sa_visualize_results",
        cli_help="visualizing model output after predictions (default: %(default)s)",
        gui_group={"ace_flow": "segmentation"},
        cli_action=ArgumentAction.STORE_TRUE,
        gui_label=["Visualize model output:"],
        module="ace",
        module_group="seg",
        version_added="2.4.0",
        default=False,
    )

    uncertainty_map = MiraclObj(
        id="dc289246-3b55-4679-92e4-45c91815a0dc",
        name="sa_uncertainty_map",
        tags=["ace", "seg", "ace_flow"],
        cli_s_flag="sau",
        cli_l_flag="sa_uncertainty_map",
        cli_help="enable map (default: %(default)s)",
        gui_group={"ace_flow": "segmentation"},
        gui_label=["Enable uncertainty map"],
        default=False,
        cli_action=ArgumentAction.STORE_TRUE,
        module="ace",
        module_group="seg",
        version_added="2.4.0",
    )

    binarization_threshold = MiraclObj(
        id="f0af9d66-6282-4fd2-a47e-893da57e3627",
        name="sa_binarization_threshold",
        tags=["ace", "seg", "ace_flow"],
        cli_s_flag="sat",
        cli_l_flag="sa_binarization_threshold",
        cli_obj_type=ArgumentType.FLOAT,
        cli_required=False,
        default=0.5,
        cli_help="threshold value for binarization (type: %(type)s; default: %(default)s)",
        gui_group={"ace_flow": "segmentation"},
        gui_label=["Binarization threshold"],
        module="ace",
        module_group="seg",
        version_added="2.4.0",
        range_formatting_vals={
            "min_val": 0.0,
            "max_val": 100.0,
            "increment_val": 0.1,
            "nr_decimals": 1,
        },
    )

    percentage_brain_patch_skip = MiraclObj(
        id="2e2cdd0b-c1ac-424a-beef-77500615664f",
        name="sa_percentage_brain_patch_skip",
        tags=["ace", "seg", "ace_flow"],
        cli_s_flag="sap",
        cli_l_flag="sa_percentage_brain_patch_skip",
        cli_required=False,
        cli_obj_type=ArgumentType.FLOAT,
        default=0.0,
        cli_help="percentage threshold of patch that is brain to skip during segmentation (type: %(type)s; default: %(default)s)",
        gui_group={"ace_flow": "segmentation"},
        gui_label=["% threshold of brain patch to skip:"],
        range_formatting_vals={
            "min_val": 0.0,
            "max_val": 100.0,
            "increment_val": 1,
            "nr_decimals": 1,
        },
        module="ace",
        module_group="seg",
        version_added="2.4.0",
    )


class SegVoxObjs:
    downsample = MiraclObj(
        id="a9c7df29-3a9b-492d-a6fe-ed9d964fb527",
        name="sv_downsample",
        tags=["voxelize", "seg", "ace_flow"],
        cli_s_flag="rvad",
        cli_l_flag="rva_downsample",
        cli_obj_type=ArgumentType.INTEGER,
        cli_help="downsample ratio for voxelization, recommended: 5 <= ratio <= 10 (default: %(default)s)",
        default=10,
        gui_label=["Voxelization dx"],
        gui_group={"ace_flow": "main"},
        gui_order=[11],
        module="voxelize",
        module_group="seg",
        version_added="2.4.0",
    )

    xy_res = MiraclObj(
        id="1575ba9e-bdae-4f6d-9ee9-7c31c7e3d3bc",
        name="rva_vx_res",
        tags=["voxelize", "seg", "ace_flow"],
        cli_s_flag="rvavx",
        cli_l_flag="rva_vx_res",
        cli_obj_type=ArgumentType.FLOAT,
        cli_help="voxel size (x, y dims) in um (default: %(default)s)",
        gui_group={"ace_flow": "vox_warp"},
        gui_label=["Voxel sizes (um):"],
        version_added="2.4.0",
        module="voxelize",
        module_group="seg",
        default=1,
    )

    z_res = MiraclObj(
        id="2f576c3a-d62f-4e37-aae1-2bae9d09ae36",
        name="rva_vz_res",
        tags=["voxelize", "seg", "ace_flow"],
        cli_s_flag="rvavz",
        cli_l_flag="rva_vz_res",
        cli_obj_type=ArgumentType.FLOAT,
        cli_help="voxel size (z dim) in um (default: %(default)s)",
        gui_group={"ace_flow": "vox_warp"},
        gui_label=["Voxel sizes (um):"],
        version_added="2.4.0",
        module="voxelize",
        module_group="seg",
        default=1,
    )
